rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // users 以下は誰でも読み込みできますが、更新・削除は本人のみができます
    match /users/{userId} {
      allow read;
      // 作成時にはデータに authId がないので認証済みなら可能とする
      allow create: if request.auth.uid != null;
      // 更新・削除は本人のみを可能とする
      allow update, delete: if resource.data.authId == request.auth.uid;

      // サブコレクションのルール内で親ドキュメントを直接参照する方法がないので関数を定義して関数経由でアクセスします
      function getUser() {
        return get(/databases/$(database)/documents/users/$(userId));
      }

      // サブコレクションも同様ですが、サブコレクションは authId を持っていませんので親ドキュメントの authId を参照します
      match /bookmarks/{userBookmarkId} {
        allow read;
        // write とは create, update, delete を 1 つにまとめたものです
        allow write: if getUser().data.authId == request.auth.uid;
      }
    }
    // bookmarks 以下は誰でも読み込みできますが、作成・更新・削除は Firebase Functions にて行うので firebase-admin 経由でのみ可能にします
    match /bookmarks/{bookmarkId} {
      allow read;
      // firebase-admin を使用すると admin プロパティが利用できます
      allow write: if request.auth.token.admin;

      // ブックマークのコメントも同様に firebase-admin 経由でのみ書き込めるようにします
      match /comments/{commentId} {
        allow read;
        allow write: if request.auth.token.admin;
      }
    }
  }
}
